name: Release and Upload Python Package on PyPI

on:
  push:
    branches:
      - main

jobs:
  ci:
    name: Call CI
    uses: ./.github/workflows/ci.yml

  release:
    name: Release version
    needs: [ci]
    runs-on: ubuntu-latest
  
    permissions:
      contents: write  # IMPORTANT: mandatory for making GitHub Releases
      id-token: write  # IMPORTANT: mandatory for sigstore

    steps:
        - name: Checkout code
          uses: actions/checkout@v4
          with:
            fetch-depth: 0  # Required to get tag information

        - name: Get version from pyproject.toml
          id: get_version
          run: |
            VERSION=v$(grep -m 1 'version = ' pyproject.toml | cut -d '"' -f 2)
            echo "version=$VERSION" >> $GITHUB_OUTPUT
            echo "Current version: $VERSION"

        - name: Download all the dists
          uses: actions/download-artifact@v4
          with:
            name: python-package-distributions
            path: dist/

        - name: Sign the dists with Sigstore
          uses: sigstore/gh-action-sigstore-python@v3.0.0
          with:
            inputs: >-
              ./dist/*.tar.gz
              ./dist/*.whl

        - name: Create release notes
          run: |
            mkdir -p docs/release-notes
            if [ ! -f "docs/release-notes/${{ steps.get_version.outputs.version }}.md" ]; then
              cat > "docs/release-notes/${{ steps.get_version.outputs.version }}.md" << EOF
              ## [${{ steps.get_version.outputs.version }}]

              ### Added
              - Initial release

              ### Changed
              - No changes yet

              ### Fixed
              - No fixes yet

              ### Security
              - No security-related changes yet
              EOF
            fi

        - name: Create GitHub Release
          env:
            GITHUB_TOKEN: ${{ github.token }}
          run: >-
            gh release create
            "${{ steps.get_version.outputs.version }}"
            --repo "$GITHUB_REPOSITORY"
            --title "Release ${{ steps.get_version.outputs.version }}"
            --notes "$(cat docs/release-notes/${{ steps.get_version.outputs.version }}.md)"

        - name: Upload artifact signatures to GitHub Release
          env:
            GITHUB_TOKEN: ${{ github.token }}
          run: >-
            gh release upload
            "${{ steps.get_version.outputs.version }}" dist/**
            --repo "$GITHUB_REPOSITORY"

  deploy:
    needs: [release]
    runs-on: ubuntu-latest

    permissions:
      contents: read

    steps:
      - uses: actions/checkout@v4

      - name: Setup the environment
        uses: ./.github/actions/build_env

      - name: Build package
        run: uv build 

      - name: Publish package
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          user: __token__
          password: ${{ secrets.PYPI_API_TOKEN }}